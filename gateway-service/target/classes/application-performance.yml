spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      metrics:
        enabled: true
      httpclient:
        pool:
          max-connections: 500
          max-idle-time: 30s
        connect-timeout: 5000
        response-timeout: 30s

# Performance monitoring configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,performance
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        gateway.request.processing.time: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
        gateway.request.processing.time: 0.5,0.95,0.99
    tags:
      application: gateway-service
      environment: performance-test

# Logging configuration for performance testing
logging:
  level:
    com.example.gateway: INFO
    org.springframework.cloud.gateway: WARN
    reactor.netty: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Gateway routing configuration optimized for performance
gateway:
  routes:
    - id: user-service-optimized
      uri: http://localhost:8081
      predicates:
        - name: Path
          args:
            pattern: /user/**
      filters:
        - name: CircuitBreaker
          args:
            name: user-service-cb
            fallbackUri: forward:/fallback/user
        - name: Retry
          args:
            retries: 2
            backoff:
              firstBackoff: 10ms
              maxBackoff: 100ms
      metadata:
        timeout: 5000
        enabled: true
        order: 1
        
    - id: product-service-optimized
      uri: http://localhost:8082
      predicates:
        - name: Path
          args:
            pattern: /product/**
      filters:
        - name: CircuitBreaker
          args:
            name: product-service-cb
            fallbackUri: forward:/fallback/product
        - name: Retry
          args:
            retries: 2
            backoff:
              firstBackoff: 10ms
              maxBackoff: 100ms
      metadata:
        timeout: 5000
        enabled: true
        order: 2

# Circuit breaker configuration optimized for performance
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        sliding-window-size: 20
        minimum-number-of-calls: 10
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
      product-service-cb:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        sliding-window-size: 20
        minimum-number-of-calls: 10
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
  retry:
    instances:
      user-service-retry:
        max-attempts: 3
        wait-duration: 10ms
        exponential-backoff-multiplier: 2
      product-service-retry:
        max-attempts: 3
        wait-duration: 10ms
        exponential-backoff-multiplier: 2

# Server configuration for optimal performance
server:
  port: 8080
  netty:
    connection-timeout: 5s
    h2c-max-content-length: 0B
  compression:
    enabled: true
    mime-types: application/json,text/plain,text/html