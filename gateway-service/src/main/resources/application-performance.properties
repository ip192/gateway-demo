# Performance Profile Configuration
# This profile contains performance-optimized configurations for the gateway service

# Spring Application Configuration
spring.application.name=gateway-service

# Spring Cloud Gateway Performance Configuration
spring.cloud.gateway.metrics.enabled=true

# HTTP Client Performance Configuration
spring.cloud.gateway.httpclient.pool.max-connections=500
spring.cloud.gateway.httpclient.pool.max-idle-time=30s
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=30s

# Management Endpoints Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,performance
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true

# Metrics Export Configuration
management.metrics.export.prometheus.enabled=true

# Metrics Distribution Configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles-histogram.gateway.request.processing.time=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.percentiles.gateway.request.processing.time=0.5,0.95,0.99

# Metrics Tags Configuration
management.metrics.tags.application=gateway-service
management.metrics.tags.environment=performance-test

# Logging Configuration for Performance Testing
logging.level.com.example.gateway=INFO
logging.level.org.springframework.cloud.gateway=WARN
logging.level.reactor.netty=WARN
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Performance-Optimized Gateway Routes Configuration
# User Service Route - Optimized
spring.cloud.gateway.routes[0].id=user-service-optimized
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=user-service-cb
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/user
spring.cloud.gateway.routes[0].filters[1].name=Retry
spring.cloud.gateway.routes[0].filters[1].args.retries=2
spring.cloud.gateway.routes[0].filters[1].args.backoff.firstBackoff=10ms
spring.cloud.gateway.routes[0].filters[1].args.backoff.maxBackoff=100ms
spring.cloud.gateway.routes[0].metadata.timeout=5000
spring.cloud.gateway.routes[0].metadata.enabled=true
spring.cloud.gateway.routes[0].metadata.order=1

# Product Service Route - Optimized
spring.cloud.gateway.routes[1].id=product-service-optimized
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/product/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=product-service-cb
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/product
spring.cloud.gateway.routes[1].filters[1].name=Retry
spring.cloud.gateway.routes[1].filters[1].args.retries=2
spring.cloud.gateway.routes[1].filters[1].args.backoff.firstBackoff=10ms
spring.cloud.gateway.routes[1].filters[1].args.backoff.maxBackoff=100ms
spring.cloud.gateway.routes[1].metadata.timeout=5000
spring.cloud.gateway.routes[1].metadata.enabled=true
spring.cloud.gateway.routes[1].metadata.order=2

# Circuit Breaker Configuration - Performance Optimized
# User Service Circuit Breaker
resilience4j.circuitbreaker.instances.user-service-cb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.user-service-cb.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.user-service-cb.sliding-window-size=20
resilience4j.circuitbreaker.instances.user-service-cb.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.user-service-cb.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.user-service-cb.slow-call-duration-threshold=2s

# Product Service Circuit Breaker
resilience4j.circuitbreaker.instances.product-service-cb.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.product-service-cb.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.product-service-cb.sliding-window-size=20
resilience4j.circuitbreaker.instances.product-service-cb.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.product-service-cb.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.product-service-cb.slow-call-duration-threshold=2s

# Retry Configuration - Performance Optimized
# User Service Retry
resilience4j.retry.instances.user-service-retry.max-attempts=3
resilience4j.retry.instances.user-service-retry.wait-duration=10ms
resilience4j.retry.instances.user-service-retry.exponential-backoff-multiplier=2

# Product Service Retry
resilience4j.retry.instances.product-service-retry.max-attempts=3
resilience4j.retry.instances.product-service-retry.wait-duration=10ms
resilience4j.retry.instances.product-service-retry.exponential-backoff-multiplier=2

# Server Configuration for Optimal Performance
server.port=8080
server.netty.connection-timeout=5s
server.netty.h2c-max-content-length=0B
server.compression.enabled=true
server.compression.mime-types=application/json,text/plain,text/html